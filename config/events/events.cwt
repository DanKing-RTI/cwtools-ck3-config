types = {
    ## graph_related_types = { on_action story_cycle }
	type[event] = {
        path = "game/events"
        localisation = {
			## primary
			title = title
		}

        subtype[visible] = {
            ## cardinality = 0..1
            hidden = no
        }
        ## push_scope = character
        ## display_name = Character event
		## abbreviation = CE
        subtype[character] = {
            ## cardinality = 0..0
            scope = scalar
        }

        ## push_scope = faith
        subtype[faith] = {
            ## cardinality = 1..1
            scope = faith
        }

	}
}
enums = {
    enum[event_types] = {
        character_event
        letter_event
    }
    enum[event_scope_types] = {
        faith
    }
}

single_alias[complex_event_desc] = {
    ## cardinality = 0..inf
    desc = localisation

    ## cardinality = 0..inf
    random_valid = {
        ## cardinality = 2..inf
        desc = localisation
    }

    ## cardinality = 0..inf
    first_valid = {
        ## cardinality = 1..inf
        triggered_desc = {
            desc = localisation
            trigger = {
                ## cardinality = 1..inf
                alias_name[trigger] = alias_match_left[trigger]
            }
        }
    }
}


event = {
    ## cardinality = 0..1
    type = enum[event_types]

    ## cardinality = 0..1
    scope = enum[event_scope_types]

    ## cardinality = 0..1
    hidden = bool

    subtype[visible] = {
        title = localisation
        title = single_alias_right[complex_event_desc]
        picture = <event_picture>
        desc = localisation
        desc = single_alias_right[complex_event_desc]
    }
    subtype[!visible] = {
        # So that things don't yell at you if you make an event hidden for a lil while
        ## cardinality = 0..1
        title = localisation
        ## cardinality = 0..1
        picture = <event_picture>
        ## cardinality = 0..1
        desc = localisation
        ## cardinality = 0..1
        desc = single_alias_right[complex_event_desc]
    }

    ## cardinality = 0..inf
    immediate = single_alias_right[effect_clause]

    ## cardinality = 0..1
    on_trigger_fail = single_alias_right[effect_clause]

    ## cardinality = 0..inf
    trigger = single_alias_right[trigger_clause]

    ## cardinality = 0..inf
    option = {
        ## cardinality = 0..1
        name = localisation
        ## cardinality = 0..1
        name = single_alias_right[complex_event_desc]
        ## cardinality = 0..1
        name = {
            trigger = single_alias_right[trigger_clause]
            text = localisation
        }

        ## cardinality = 0..1
        highlight = bool

        ## cardinality = 0..1
        ### Defaults to no.
        exclusive = bool

        ## cardinality = 0..inf
        alias_name[effect] = alias_match_left[effect]

        ## cardinality = 0..1
        trigger = single_alias_right[trigger_clause]

        ## cardinality = 0..1
        ai_chance = single_alias_right[ai_chance_block]

        ## cardinality = 0..1
        skill = enum[event_option_skills]

        ## cardinality = 0..inf
        trait = <trait>
        ## cardinality = 0..inf
        trait = enum[trait_group]
    }
    ## cardinality = 0..inf
    after = single_alias_right[effect_clause]

    ## cardinality = 0..1
    weight_multiplier = single_alias_right[weight_block]

    ## cardinality = 0..1
    left_portrait = scope[character]
    ## cardinality = 0..1
    left_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
	right_portrait = scope[character]
    ## cardinality = 0..1
	right_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
	lower_left_portrait = scope[character]
    ## cardinality = 0..1
	lower_left_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
	lower_center_portrait = scope[character]
    ## cardinality = 0..1
	lower_center_portrait = single_alias_right[event_portrait]
    ## cardinality = 0..1
	lower_right_portrait = scope[character]
    ## cardinality = 0..1
	lower_right_portrait = single_alias_right[event_portrait]

    ## cardinality = 0..1
    theme = enum[event_themes]

}

single_alias[event_portrait] = {

}

enums = {
    enum[event_option_skills] = {
        learning
    }
    complex_enum[event_themes] = {
        path ="game/common/event_themes"
        start_from_root = yes
        name = {
                enum_name = {
                    icon = {
                        reference = scalar
                    }
                    sound = {
                        reference = scalar
                    }
                    background = {
                        reference = scalar
                    }
                }
        }
    }
}
